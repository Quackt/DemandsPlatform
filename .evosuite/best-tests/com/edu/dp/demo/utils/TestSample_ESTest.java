/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 04:15:55 GMT 2020
 */

package com.edu.dp.demo.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TestSample_ESTest extends TestSample_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TestSample.formatTimePeriod((-2615L));
      TestSample.buildDateString(0L);
      Integer integer0 = new Integer(420);
      TestSample testSample0 = new TestSample();
      TestSample.getTimezoneString(420);
      TestSample.parseDate("");
      TestSample.buildDateString(42L);
      TestSample.getTimezoneString(0);
      TestSample.buildDateString(42L);
      Integer[] integerArray0 = new Integer[6];
      integerArray0[0] = (Integer) 2014;
      integerArray0[1] = (Integer) 2014;
      integerArray0[2] = integer0;
      integerArray0[3] = (Integer) 2014;
      TestSample.getRange(integerArray0);
      TestSample.asDigits(1, 0);
      TestSample.asDigits(1000, 0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TestSample.formatTimePeriod((-2615L));
      TestSample.getNumberSuffix(3);
      TestSample.buildDateString(0L);
      Integer integer0 = new Integer(3);
      Integer integer1 = new Integer(3);
      Integer integer2 = new Integer(420);
      TestSample.formatTime(integer0, integer0, integer1, integer0, integer2);
      TestSample.getNumberSuffix(420);
      TestSample testSample0 = new TestSample();
      TestSample.getTimezoneString(420);
      TestSample.parseDate("");
      TestSample.buildDateString(42L);
      TestSample.getTimezoneString(0);
      TestSample.buildDateString(42L);
      Integer[] integerArray0 = new Integer[6];
      integerArray0[0] = (Integer) 2014;
      integerArray0[1] = (Integer) 2014;
      integerArray0[2] = integer2;
      integerArray0[3] = (Integer) 2014;
      integerArray0[4] = integer1;
      integerArray0[5] = integer0;
      TestSample.getRange(integerArray0);
      TestSample.asDigits(1, 0);
      TestSample.asDigits(1000, 0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Integer integer0 = new Integer((-1220));
      Integer[] integerArray0 = new Integer[9];
      integerArray0[0] = integer0;
      integerArray0[1] = integer0;
      integerArray0[2] = integer0;
      TestSample.getRange(integerArray0);
      integerArray0[4] = integer0;
      TestSample.getRange(integerArray0);
      TestSample.asDigits(24, 24);
      TestSample.formatTimePeriod(1072L);
      TestSample.asDigits((-1222), (-1220));
      TestSample.formatTimePeriod(2508L);
      TestSample.formatTimePeriod((long) integerArray0[4]);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = 709;
      Integer integer0 = new Integer(709);
      TestSample.formatTime(integer0, integer0, integer0, integer0, integer0);
      Integer[] integerArray0 = new Integer[10];
      integerArray0[0] = integer0;
      integerArray0[1] = integer0;
      TestSample.getRange(integerArray0);
      Integer integer1 = new Integer((int) integerArray0[1]);
      // Undeclared exception!
      try { 
        TestSample.formatDate(integerArray0[1], integer1, integerArray0[1]);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 709
         //
         verifyException("com.edu.dp.demo.utils.TestSample", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TestSample.formatTimePeriod((-2615L));
      TestSample.getNumberSuffix(3);
      TestSample.buildDateString(0L);
      Integer integer0 = new Integer(3);
      Integer integer1 = new Integer(3);
      Integer integer2 = new Integer(420);
      TestSample.formatTime(integer0, integer0, integer1, integer0, integer2);
      TestSample.formatDate(integer0, integer1, integer0);
      TestSample testSample0 = new TestSample();
      TestSample.getTimezoneString(420);
      TestSample.parseDate("");
      TestSample.buildDateString(42L);
      TestSample.getTimezoneString(0);
      TestSample.buildDateString(42L);
      Integer[] integerArray0 = new Integer[6];
      integerArray0[0] = (Integer) 2014;
      integerArray0[1] = (Integer) 2014;
      integerArray0[2] = integer2;
      integerArray0[3] = (Integer) 2014;
      integerArray0[4] = integer1;
      TestSample.getRange(integerArray0);
      TestSample.asDigits(1, 0);
      TestSample.asDigits(1000, 0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Integer integer0 = new Integer(1681);
      Integer integer1 = new Integer(1681);
      TestSample.formatTime(integer0, integer0, (Integer) null, integer1, integer0);
      TestSample.formatTimePeriod(60000L);
      Integer integer2 = new Integer(0);
      Integer integer3 = new Integer(1681);
      Integer integer4 = new Integer(12);
      Integer integer5 = new Integer(2362);
      TestSample.formatTime(integer2, (Integer) null, integer3, integer4, integer5);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Integer integer0 = new Integer(701);
      int int0 = 0;
      Integer integer1 = new Integer(0);
      TestSample.formatTime(integer0, integer1, integer1, (Integer) null, integer1);
      TestSample.asDigits(0, 0);
      TestSample.parseDate("0");
      TestSample testSample0 = new TestSample();
      Integer[] integerArray0 = new Integer[8];
      integerArray0[0] = null;
      Integer integer2 = new Integer(0);
      integerArray0[1] = integer2;
      integerArray0[2] = (Integer) 2014;
      integerArray0[3] = integer1;
      integerArray0[4] = integer0;
      integerArray0[5] = integer0;
      Integer integer3 = new Integer(int0);
      integerArray0[6] = integer3;
      integerArray0[7] = integer0;
      // Undeclared exception!
      try { 
        TestSample.getTimeInMillis(integerArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.edu.dp.demo.utils.TestSample", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TestSample.buildDateString((-855L));
      TestSample.parseDate("");
      Integer integer0 = new Integer((-967));
      Integer integer1 = new Integer((-909));
      Integer integer2 = new Integer(0);
      Integer integer3 = new Integer(0);
      TestSample.buildDateString(integer0, integer1, integer2, (Integer) null, integer0, integer3);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TestSample.buildDateString((-4251L));
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = new Integer(797);
      integerArray0[0] = integer0;
      Integer integer1 = new Integer((int) integerArray0[0]);
      integerArray0[1] = integer1;
      Integer integer2 = new Integer(1000);
      integerArray0[2] = integer2;
      Integer integer3 = new Integer((-257));
      integerArray0[3] = integer3;
      Integer integer4 = new Integer((int) integerArray0[2]);
      integerArray0[4] = integer4;
      Integer integer5 = new Integer((int) integerArray0[0]);
      integerArray0[5] = integer5;
      Integer integer6 = new Integer(797);
      integerArray0[6] = integer6;
      TestSample.getRange(integerArray0);
      TestSample.getTimezoneString((int) integerArray0[5]);
      Integer integer7 = new Integer(10);
      Integer integer8 = new Integer(0);
      Integer integer9 = new Integer((int) integerArray0[0]);
      TestSample.formatDate(integer7, integer8, integer9);
      TestSample testSample0 = new TestSample();
      TestSample.buildDateString((long) integerArray0[3]);
      Integer integer10 = new Integer((-257));
      Integer integer11 = new Integer(1238);
      Integer integer12 = new Integer(10);
      Integer integer13 = new Integer((int) integerArray0[2]);
      // Undeclared exception!
      try { 
        TestSample.buildDateString((Integer) null, integer10, integer11, integer9, integer12, integer13);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.edu.dp.demo.utils.TestSample", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TestSample.getTimezoneString(622);
      TestSample.buildDateString((long) 622);
      TestSample.asDigits(622, 0);
      TestSample.formatDate((Integer) null, (Integer) null, (Integer) null);
      TestSample.parseDate("");
      TestSample.asDigits(45, 622);
      TestSample.getNumberSuffix(45);
      TestSample.getTimezoneString((-287));
      TestSample.buildYMDString(0L);
      TestSample.formatTime((Integer) null, (Integer) null, (Integer) null, (Integer) null, (Integer) null);
      Integer integer0 = new Integer((-1951));
      Integer integer1 = new Integer(487);
      // Undeclared exception!
      try { 
        TestSample.getTimeInMillis((Integer) null, (Integer) null, integer0, integer1, integer1, (Integer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.edu.dp.demo.utils.TestSample", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TestSample.formatTimePeriod(1000L);
      TestSample.formatTimePeriod((-2048L));
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(133);
      Integer integer2 = new Integer(1427);
      TestSample.formatTime(integer0, integer1, integer1, integer2, integer2);
      TestSample.getNumberSuffix(0);
      TestSample.asDigits(0, 1427);
      TestSample.getTimeInMillis((Integer[]) null);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Integer[] integerArray0 = new Integer[9];
      int int0 = 0;
      Integer integer0 = new Integer(0);
      integerArray0[0] = integer0;
      Integer integer1 = new Integer(int0);
      integerArray0[1] = integer1;
      Integer integer2 = new Integer(int0);
      integerArray0[2] = integer2;
      Integer integer3 = new Integer(531);
      integerArray0[3] = integer3;
      Integer integer4 = new Integer(int0);
      integerArray0[4] = integer4;
      Integer integer5 = new Integer((-1021));
      integerArray0[5] = integer5;
      Integer integer6 = new Integer(3310);
      integerArray0[6] = integer6;
      Integer integer7 = new Integer((-177));
      integerArray0[7] = integer7;
      Integer integer8 = new Integer(0);
      integerArray0[8] = integer8;
      TestSample.getTimeInMillis(integerArray0);
      TestSample.buildDateString((-1L));
      TestSample.getTimezoneString(3310);
      Integer integer9 = new Integer(0);
      TestSample.getTimeInMillis(integerArray0[6], integer9, (Integer) int0, integer5, integerArray0[5], integerArray0[6]);
      TestSample.parseDateComponents("");
      // Undeclared exception!
      try { 
        TestSample.parseDate("GMT+3310");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No match found
         //
         verifyException("java.util.regex.Matcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TestSample.formatTimePeriod((-422L));
      TestSample.getTimeInMillis((Integer[]) null);
      TestSample.asDigits((-1331), (-2253));
      TestSample.getRange((Integer[]) null);
      TestSample.parseDateComponents("");
      Integer integer0 = new Integer(0);
      TestSample.formatDate(integer0, integer0, integer0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TestSample.formatTimePeriod(2070L);
      int int0 = 783;
      Integer integer0 = new Integer(783);
      int int1 = 1;
      Integer integer1 = new Integer(1);
      TestSample.getTimeInMillis(integer0, integer0, integer0, integer0, integer0, integer1);
      TestSample.parseDateComponents("2s 70ms ");
      TestSample.buildYMDString(1);
      TestSample.parseDate("2s 70ms ");
      TestSample.asDigits(1, 783);
      TestSample.parseDate("f");
      TestSample.parseDateComponents("2s 70ms ");
      Integer integer2 = new Integer(0);
      Integer integer3 = new Integer(1);
      TestSample.formatTime(integer2, integer1, integer3, integer1, integer3);
      TestSample.parseDateComponents("f");
      TestSample.getTimezoneString(10);
      Integer integer4 = new Integer(0);
      TestSample.buildDateString(integer2, integer2, integer2, integer3, integer2, integer4);
      // Undeclared exception!
      try { 
        TestSample.parseDateComponents("1970-01-01");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No match found
         //
         verifyException("java.util.regex.Matcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TestSample.asDigits((-3038), (-3038));
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer((-3038));
      Integer integer2 = new Integer(0);
      TestSample.buildDateString(integer0, (Integer) null, integer0, integer0, integer1, integer2);
      Integer integer3 = new Integer(0);
      // Undeclared exception!
      try { 
        TestSample.formatDate(integer1, (Integer) null, integer3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -8
         //
         verifyException("com.edu.dp.demo.utils.TestSample", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Integer integer0 = new Integer((-844));
      Integer integer1 = new Integer((-844));
      Integer integer2 = new Integer(2728);
      Integer integer3 = new Integer(2728);
      TestSample.buildDateString(integer0, integer1, integer2, integer1, integer3, (Integer) null);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TestSample testSample0 = new TestSample();
      TestSample.parseDate("May");
      TestSample.buildYMDString((-1L));
      TestSample.getNumberSuffix(2014);
      TestSample.formatTimePeriod(1000L);
      // Undeclared exception!
      try { 
        TestSample.parseDateComponents("1969-12-31");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No match found
         //
         verifyException("java.util.regex.Matcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(0);
      TestSample.buildDateString(integer0, integer0, integer0, integer1, (Integer) null, (Integer) null);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Integer integer0 = new Integer(34);
      Integer integer1 = new Integer(0);
      Integer integer2 = new Integer((-1206));
      TestSample.buildDateString(integer0, integer0, (Integer) null, integer1, (Integer) null, integer2);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        TestSample.parseDateComponents((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Integer integer0 = new Integer(314);
      Integer integer1 = new Integer(0);
      Integer integer2 = new Integer(314);
      TestSample.formatDate(integer0, integer1, integer2);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Integer integer0 = new Integer((-1602));
      Integer integer1 = new Integer((-1602));
      // Undeclared exception!
      try { 
        TestSample.formatDate(integer0, (Integer) null, integer1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2
         //
         verifyException("com.edu.dp.demo.utils.TestSample", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TestSample.buildDateString(0L);
      Integer[] integerArray0 = new Integer[1];
      int int0 = 535;
      Integer integer0 = new Integer(535);
      integerArray0[0] = integer0;
      // Undeclared exception!
      try { 
        TestSample.getRange(integerArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("com.edu.dp.demo.utils.TestSample", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(0);
      TestSample.formatDate(integer0, integer0, integer1);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TestSample.parseDate(".Nk1RP7SDO");
      TestSample.asDigits(0, 0);
      TestSample.getTimezoneString(0);
      TestSample.parseDateComponents("GMT");
      TestSample.buildYMDString(0L);
      TestSample.parseDateComponents("");
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer((-1));
      TestSample.getTimeInMillis(integer0, (Integer) null, integer0, (Integer) null, integer0, integer1);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(1038);
      Integer integer2 = new Integer((-853));
      Integer integer3 = new Integer(0);
      TestSample.getTimeInMillis(integer0, (Integer) null, (Integer) null, integer1, integer2, integer3);
      TestSample.getTimezoneString(0);
      Integer integer4 = new Integer(0);
      Integer integer5 = new Integer(0);
      Integer integer6 = new Integer(0);
      TestSample.getTimeInMillis(integer4, integer5, (Integer) null, integer4, (Integer) null, integer6);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TestSample.parseDate("");
      TestSample.getNumberSuffix(0);
      int int0 = 528;
      TestSample.asDigits(528, 0);
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(528);
      Integer integer2 = new Integer(528);
      TestSample.buildDateString(integer0, integer0, integer0, integer1, integer2, integer2);
      TestSample.parseDateComponents("th");
      TestSample.asDigits(528, 0);
      TestSample testSample0 = new TestSample();
      // Undeclared exception!
      try { 
        TestSample.parseDate((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TestSample.getTimezoneString(0);
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(0);
      Integer integer2 = new Integer(0);
      Integer integer3 = new Integer(29);
      TestSample.buildDateString(integer0, integer0, integer0, integer1, integer2, integer3);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TestSample.formatTimePeriod(3214L);
      TestSample.buildYMDString(3214L);
      TestSample.parseDateComponents("");
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(0);
      TestSample.buildDateString(integer0, integer0, integer0, integer1, integer0, integer0);
      TestSample.buildDateString((-253L));
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int int0 = 0;
      TestSample.asDigits(0, 0);
      Integer integer0 = new Integer(0);
      TestSample.getTimeInMillis(integer0, integer0, integer0, integer0, integer0, integer0);
      TestSample.buildYMDString(0);
      TestSample.asDigits((-872), 0);
      TestSample testSample0 = new TestSample();
      Integer integer1 = new Integer((-4445));
      Integer integer2 = new Integer(0);
      // Undeclared exception!
      try { 
        TestSample.buildDateString((Integer) null, (Integer) null, integer1, integer1, integer0, integer2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.edu.dp.demo.utils.TestSample", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Integer[] integerArray0 = new Integer[3];
      Integer integer0 = new Integer((-836));
      integerArray0[0] = integer0;
      Integer integer1 = new Integer(0);
      integerArray0[1] = integer1;
      Integer integer2 = new Integer(0);
      integerArray0[2] = integer2;
      // Undeclared exception!
      try { 
        TestSample.getTimeInMillis(integerArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.edu.dp.demo.utils.TestSample", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(0);
      Integer integer2 = new Integer(0);
      TestSample.getTimeInMillis(integer0, integer1, integer0, integer0, integer2, integer2);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      TestSample testSample0 = new TestSample();
      Integer integer0 = new Integer(0);
      TestSample.buildDateString((Integer) 2014, (Integer) 2014, (Integer) 2014, integer0, (Integer) 2014, integer0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Integer integer0 = new Integer(1);
      Integer integer1 = new Integer(1390);
      Integer integer2 = new Integer(1390);
      TestSample.formatTime(integer0, integer1, integer2, integer2, integer2);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(0);
      Integer integer2 = new Integer(0);
      TestSample.formatTime(integer0, integer0, integer0, integer1, integer2);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      TestSample.formatTimePeriod(3600000L);
      int int0 = 0;
      TestSample.asDigits((-1), 0);
      TestSample.getRange((Integer[]) null);
      TestSample testSample0 = new TestSample();
      int int1 = 4605;
      Integer integer0 = new Integer(4605);
      Integer integer1 = new Integer(0);
      Integer integer2 = new Integer(2014);
      TestSample.buildDateString(integer0, integer1, integer0, integer2, integer0, (Integer) 2014);
      TestSample.formatTimePeriod(0);
      TestSample.getRange((Integer[]) null);
      TestSample.getRange((Integer[]) null);
      TestSample.getTimezoneString((-1));
      TestSample.buildYMDString((-1094L));
      TestSample.getTimeInMillis((Integer[]) null);
      Integer integer3 = new Integer(0);
      // Undeclared exception!
      try { 
        TestSample.formatDate(integer3, (Integer) 2014, (Integer) 2014);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2014
         //
         verifyException("com.edu.dp.demo.utils.TestSample", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      int int0 = 3600000;
      // Undeclared exception!
      TestSample.asDigits(3600000, 3600000);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      int int0 = (-1113);
      // Undeclared exception!
      try { 
        TestSample.getNumberSuffix((-1113));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3
         //
         verifyException("com.edu.dp.demo.utils.TestSample", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      int int0 = 2796;
      int int1 = 1;
      String string0 = TestSample.asDigits(2796, 1);
      assertNotNull(string0);
      assertEquals("2796", string0);
      
      Integer integer0 = new Integer(1);
      assertFalse(integer0.equals((Object)int0));
      assertTrue(integer0.equals((Object)int1));
      assertNotNull(integer0);
      assertEquals(1, (int)integer0);
      
      Integer integer1 = new Integer(1);
      assertTrue(integer1.equals((Object)integer0));
      assertFalse(integer1.equals((Object)int0));
      assertTrue(integer1.equals((Object)int1));
      assertNotNull(integer1);
      assertEquals(1, (int)integer1);
      
      long long0 = TestSample.getTimeInMillis(integer0, integer0, integer1, integer0, integer1, (Integer) null);
      assertFalse(integer0.equals((Object)int0));
      assertTrue(integer0.equals((Object)int1));
      assertTrue(integer0.equals((Object)integer1));
      assertTrue(integer1.equals((Object)integer0));
      assertFalse(integer1.equals((Object)int0));
      assertTrue(integer1.equals((Object)int1));
      assertEquals(0L, long0);
      
      String string1 = TestSample.getNumberSuffix(2796);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("th", string1);
      
      Integer[] integerArray0 = new Integer[6];
      integerArray0[0] = null;
      integerArray0[1] = integer1;
      integerArray0[2] = null;
      integerArray0[3] = null;
      integerArray0[4] = null;
      integerArray0[5] = integer1;
      // Undeclared exception!
      try { 
        TestSample.getRange(integerArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.edu.dp.demo.utils.TestSample", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Integer integer0 = new Integer((-154));
      assertNotNull(integer0);
      assertEquals((-154), (int)integer0);
      
      String string0 = TestSample.formatTime(integer0, integer0, integer0, integer0, integer0);
      assertNotNull(string0);
      assertEquals("-10:-154:-154 GMT-154", string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      long[] longArray0 = TestSample.getRange((Integer[]) null);
      assertNull(longArray0);
      
      long[] longArray1 = TestSample.getRange((Integer[]) null);
      assertNull(longArray1);
      
      long long0 = TestSample.getTimeInMillis((Integer[]) null);
      assertEquals(0L, long0);
      
      long[] longArray2 = TestSample.getRange((Integer[]) null);
      assertNull(longArray2);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      String string0 = TestSample.getTimezoneString(1);
      assertNotNull(string0);
      assertEquals("GMT+1", string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      String string0 = TestSample.formatTimePeriod(0L);
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Integer integer0 = new Integer(1758);
      assertNotNull(integer0);
      assertEquals(1758, (int)integer0);
      
      // Undeclared exception!
      try { 
        TestSample.formatDate(integer0, integer0, integer0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1758
         //
         verifyException("com.edu.dp.demo.utils.TestSample", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      TestSample testSample0 = new TestSample();
      assertEquals(2014, TestSample.CURRENT_YEAR);
      assertNotNull(testSample0);
      
      String string0 = TestSample.asDigits(0, 0);
      assertNotNull(string0);
      assertEquals("0", string0);
      
      String string1 = TestSample.buildYMDString(0L);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("1970-01-01", string1);
      
      Integer[] integerArray0 = new Integer[8];
      integerArray0[0] = (Integer) 2014;
      integerArray0[1] = (Integer) 2014;
      integerArray0[2] = (Integer) 2014;
      integerArray0[3] = (Integer) 2014;
      integerArray0[4] = (Integer) 2014;
      integerArray0[5] = (Integer) 2014;
      integerArray0[6] = (Integer) 2014;
      integerArray0[7] = (Integer) 2014;
      long[] longArray0 = TestSample.getRange(integerArray0);
      assertEquals(8, integerArray0.length);
      assertEquals(2, longArray0.length);
      assertNotNull(longArray0);
      assertArrayEquals(new long[] {0L, 0L}, longArray0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Integer[] integerArray0 = new Integer[0];
      // Undeclared exception!
      try { 
        TestSample.getRange(integerArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("com.edu.dp.demo.utils.TestSample", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Integer[] integerArray0 = new Integer[17];
      int int0 = (-1);
      Integer integer0 = new Integer((-1));
      assertTrue(integer0.equals((Object)int0));
      assertNotNull(integer0);
      assertEquals((-1), (int)integer0);
      
      integerArray0[0] = integer0;
      Integer integer1 = new Integer(int0);
      assertTrue(integer1.equals((Object)integer0));
      assertTrue(integer1.equals((Object)int0));
      assertNotNull(integer1);
      assertEquals((-1), (int)integer1);
      
      integerArray0[1] = integer1;
      Integer integer2 = new Integer(0);
      assertFalse(integer2.equals((Object)integer0));
      assertFalse(integer2.equals((Object)int0));
      assertFalse(integer2.equals((Object)integer1));
      assertNotNull(integer2);
      assertEquals(0, (int)integer2);
      
      integerArray0[2] = integer2;
      long long0 = TestSample.getTimeInMillis(integerArray0);
      assertEquals(17, integerArray0.length);
      assertEquals(0L, long0);
      
      long long1 = TestSample.parseDate("May");
      assertTrue(long1 == long0);
      assertEquals(0L, long1);
      
      String string0 = TestSample.asDigits(0, int0);
      assertNotNull(string0);
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      String string0 = TestSample.asDigits(0, 0);
      assertNotNull(string0);
      assertEquals("0", string0);
      
      TestSample testSample0 = new TestSample();
      assertEquals(2014, TestSample.CURRENT_YEAR);
      assertNotNull(testSample0);
      
      Integer[] integerArray0 = new Integer[7];
      integerArray0[0] = (Integer) 2014;
      integerArray0[1] = (Integer) 2014;
      integerArray0[3] = (Integer) 2014;
      integerArray0[4] = (Integer) 2014;
      integerArray0[5] = (Integer) 2014;
      integerArray0[6] = (Integer) 2014;
      long long0 = TestSample.getTimeInMillis(integerArray0);
      assertEquals(7, integerArray0.length);
      assertEquals(0L, long0);
      
      String string1 = TestSample.buildDateString((long) 2014);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("1970-01-01-00:00:02", string1);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Integer integer0 = new Integer(294);
      assertNotNull(integer0);
      assertEquals(294, (int)integer0);
      
      Integer integer1 = new Integer(294);
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      assertEquals(294, (int)integer1);
      
      long long0 = TestSample.getTimeInMillis(integer0, integer0, integer1, integer0, (Integer) null, (Integer) null);
      assertTrue(integer0.equals((Object)integer1));
      assertTrue(integer1.equals((Object)integer0));
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Integer[] integerArray0 = new Integer[0];
      // Undeclared exception!
      try { 
        TestSample.getTimeInMillis(integerArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.edu.dp.demo.utils.TestSample", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      String string0 = TestSample.getNumberSuffix(0);
      assertNotNull(string0);
      assertEquals("th", string0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      String string0 = TestSample.buildDateString((-2390L));
      assertNotNull(string0);
      assertEquals("1969-12-31-23:59:57", string0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Integer integer0 = new Integer((-1220));
      assertNotNull(integer0);
      assertEquals((-1220), (int)integer0);
      
      Integer[] integerArray0 = new Integer[9];
      integerArray0[0] = integer0;
      integerArray0[1] = integer0;
      integerArray0[2] = integer0;
      long[] longArray0 = TestSample.getRange(integerArray0);
      assertEquals(9, integerArray0.length);
      assertEquals(2, longArray0.length);
      assertNotNull(longArray0);
      assertArrayEquals(new long[] {0L, 86400000L}, longArray0);
      
      integerArray0[4] = integer0;
      long[] longArray1 = TestSample.getRange(integerArray0);
      assertFalse(longArray1.equals((Object)longArray0));
      assertEquals(9, integerArray0.length);
      assertEquals(2, longArray1.length);
      assertNotSame(longArray1, longArray0);
      assertNotNull(longArray1);
      assertArrayEquals(new long[] {0L, 60000L}, longArray1);
      
      String string0 = TestSample.asDigits((int) integerArray0[0], (int) integerArray0[0]);
      assertEquals(9, integerArray0.length);
      assertNotNull(string0);
      assertEquals("-1220", string0);
      
      String string1 = TestSample.asDigits((-1222), (-1220));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("-1222", string1);
      
      String string2 = TestSample.formatTimePeriod(2508L);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals("2s 508ms ", string2);
      
      String string3 = TestSample.formatTimePeriod((long) integerArray0[4]);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertEquals(9, integerArray0.length);
      assertNotNull(string3);
      assertEquals("", string3);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      TestSample.formatTimePeriod((-277L));
      TestSample.getNumberSuffix(1990);
      int int0 = 0;
      TestSample.asDigits(0, 1990);
      TestSample.parseDate("e[UciHY*1QC=)w+&.");
      Integer integer0 = new Integer(1990);
      Integer integer1 = new Integer(0);
      Integer integer2 = new Integer(0);
      Integer integer3 = new Integer(0);
      TestSample.buildDateString(integer0, integer1, (Integer) null, integer2, integer3, integer1);
      TestSample.formatTimePeriod(0L);
      Integer integer4 = new Integer(1990);
      // Undeclared exception!
      try { 
        TestSample.buildDateString((Integer) null, integer0, integer1, integer4, integer4, integer1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.edu.dp.demo.utils.TestSample", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Integer[] integerArray0 = new Integer[7];
      int int0 = 1;
      Integer integer0 = new Integer(1);
      integerArray0[0] = integer0;
      Integer integer1 = new Integer(1);
      Integer integer2 = new Integer((-836));
      Integer integer3 = new Integer(1);
      Integer integer4 = new Integer(3600000);
      integerArray0[4] = integer4;
      Integer integer5 = new Integer(int0);
      integerArray0[5] = integer5;
      Integer integer6 = new Integer((-836));
      integerArray0[6] = integer6;
      long[] longArray0 = TestSample.getRange(integerArray0);
      assertArrayEquals(new long[] {0L, 0L}, longArray0);
      
      TestSample.parseDateComponents("`Uz7L3Bj.-s?MGA");
      Integer integer7 = new Integer(2143329907);
      String string0 = TestSample.formatDate(integerArray0[1], integer0, integer7);
      assertEquals("Feb2143329907", string0);
      
      TestSample.getTimezoneString((-1335));
      System.setCurrentTimeMillis(1);
      String string1 = TestSample.getTimezoneString((-1335));
      assertEquals("GMT-1335", string1);
      
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-2179L));
      TestSample.parseDateComponents("x<kS\"N#vVWIx");
      String string2 = TestSample.formatTimePeriod(2143329907);
      assertEquals("595h 22m 9s 907ms ", string2);
      
      Integer integer8 = new Integer(1);
      String string3 = TestSample.formatTime((Integer) int0, integer2, integer8, integer5, (Integer) int0);
      assertEquals("13:-836:01 GMT+1", string3);
      
      long long0 = TestSample.getTimeInMillis((Integer[]) null);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Integer integer0 = new Integer((-1074));
      TestSample.buildDateString(integer0, integer0, integer0, integer0, integer0, (Integer) null);
      Integer integer1 = new Integer(10);
      Integer integer2 = new Integer(11);
      Integer integer3 = new Integer(978);
      assertEquals(978, (int)integer3);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Integer integer0 = new Integer(13);
      Integer integer1 = new Integer(13);
      Integer integer2 = null;
      TestSample.buildDateString(integer0, (Integer) null, integer1, (Integer) null, (Integer) null, integer1);
      TestSample.asDigits(6, 13);
      TestSample.formatDate((Integer) null, (Integer) null, (Integer) null);
      TestSample.getNumberSuffix(6);
      TestSample.getNumberSuffix(13);
      TestSample.asDigits(13, 13);
      int int0 = 32;
      TestSample.asDigits(13, 32);
      TestSample.formatTimePeriod(13);
      TestSample.asDigits(24, 32);
      Integer integer3 = new Integer(24);
      Integer integer4 = new Integer(6);
      Integer integer5 = new Integer(32);
      // Undeclared exception!
      try { 
        TestSample.buildDateString((Integer) null, integer3, integer3, integer4, integer5, integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.edu.dp.demo.utils.TestSample", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      String string0 = TestSample.formatTimePeriod(3544L);
      assertEquals("3s 544ms ", string0);
      
      TestSample.getRange((Integer[]) null);
      TestSample testSample0 = new TestSample();
      String string1 = TestSample.buildYMDString(2014);
      assertEquals("1970-01-01", string1);
      
      Integer integer0 = new Integer(4605);
      String string2 = TestSample.buildDateString(integer0, (Integer) 2014, integer0, (Integer) 2014, integer0, (Integer) 2014);
      assertEquals("4605-2014-4605-2014:4605:2014", string2);
      
      TestSample.formatTimePeriod(0);
      TestSample.getRange((Integer[]) null);
      TestSample.getRange((Integer[]) null);
      String string3 = TestSample.buildDateString((long) 0);
      assertEquals("1970-01-01-00:00:00", string3);
      
      String string4 = TestSample.formatTimePeriod(1055L);
      assertEquals("1s 55ms ", string4);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Integer integer0 = new Integer(1706);
      int int0 = 29;
      Integer integer1 = new Integer(29);
      Integer integer2 = new Integer(1706);
      Integer integer3 = null;
      TestSample.buildDateString(integer0, integer1, integer2, integer0, (Integer) null, (Integer) null);
      TestSample.parseDate("W/z`vl");
      TestSample.buildDateString(1L);
      TestSample.parseDateComponents("TBsF:,3W");
      Integer integer4 = new Integer((int) integer2);
      // Undeclared exception!
      try { 
        TestSample.formatDate(integer0, integer4, integer1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1706
         //
         verifyException("com.edu.dp.demo.utils.TestSample", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Integer integer0 = new Integer(1681);
      Integer integer1 = new Integer(1681);
      String string0 = TestSample.formatTime(integer0, integer0, (Integer) null, integer1, integer0);
      assertEquals("01:1681 GMT+1681", string0);
      
      TestSample.getNumberSuffix(1681);
      Integer integer2 = new Integer(0);
      Integer integer3 = new Integer(1681);
      Integer integer4 = new Integer(2362);
      String string1 = TestSample.formatTime(integer2, (Integer) null, integer0, integer3, integer4);
      assertEquals("00:00:1681 GMT+2362", string1);
      
      Integer[] integerArray0 = new Integer[16];
      integerArray0[0] = integer3;
      integerArray0[1] = integer1;
      integerArray0[2] = null;
      TestSample.getTimeInMillis(integerArray0);
      Integer integer5 = new Integer(0);
      String string2 = TestSample.formatDate(integer1, integer5, integerArray0[1]);
      assertEquals("Jan1681st1681", string2);
      
      TestSample.getRange(integerArray0);
      long[] longArray0 = TestSample.getRange(integerArray0);
      assertArrayEquals(new long[] {0L, (-1702967296L)}, longArray0);
      
      TestSample.getNumberSuffix(1681);
      long long0 = TestSample.parseDate("st");
      assertEquals(0L, long0);
      
      String string3 = TestSample.buildYMDString(0L);
      assertEquals("1970-01-01", string3);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      TestSample.buildDateString((-2615L));
      Integer integer0 = new Integer(420);
      TestSample testSample0 = new TestSample();
      TestSample.getTimezoneString(420);
      TestSample.buildDateString(42L);
      TestSample.getTimezoneString(0);
      Integer[] integerArray0 = new Integer[6];
      integerArray0[0] = (Integer) 2014;
      integerArray0[1] = (Integer) 2014;
      integerArray0[2] = integer0;
      integerArray0[3] = (Integer) 2014;
      TestSample.getRange(integerArray0);
      TestSample.asDigits(1000, 0);
      long long0 = TestSample.parseDate("GMT+420");
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Integer integer0 = new Integer((-2104));
      Integer integer1 = new Integer((-2104));
      Integer integer2 = new Integer(1204);
      TestSample.formatTime((Integer) null, integer1, integer0, integer0, integer2);
      TestSample.formatTime(integer0, integer0, integer1, (Integer) null, integer1);
      TestSample.getTimezoneString((-2104));
      TestSample.getNumberSuffix(1204);
      Integer integer3 = new Integer((-2104));
      Integer integer4 = new Integer(0);
      TestSample.formatTime(integer3, integer0, integer0, integer0, integer4);
      TestSample.getNumberSuffix(610);
      // Undeclared exception!
      try { 
        TestSample.parseDate("-4:-2104:-2104 GMT");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No match found
         //
         verifyException("java.util.regex.Matcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Integer[] integerArray0 = new Integer[10];
      // Undeclared exception!
      try { 
        TestSample.getRange(integerArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.edu.dp.demo.utils.TestSample", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      TestSample testSample0 = new TestSample();
      TestSample.getTimezoneString(0);
      Integer integer0 = new Integer(2257);
      Integer integer1 = new Integer(12);
      Integer integer2 = new Integer(0);
      Integer integer3 = new Integer(0);
      TestSample.getTimeInMillis((Integer) 2014, integer0, integer1, integer2, integer1, integer3);
      TestSample.formatTimePeriod(2014);
      TestSample.buildYMDString((-1L));
      Integer integer4 = new Integer(2014);
      TestSample.formatTime(integer3, (Integer) 2014, integer2, integer0, integer4);
      Integer integer5 = new Integer(0);
      TestSample.formatTime((Integer) 2014, integer5, integer5, integer5, (Integer) null);
      Integer integer6 = new Integer(2014);
      Integer integer7 = new Integer(0);
      Integer integer8 = new Integer(1739);
      assertFalse(integer8.equals((Object)integer2));
  }
}
